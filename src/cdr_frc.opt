
      ! ****************************************************************
      ! user inputs

      logical,parameter,public :: cdr_source  = .false.  ! Should be false if not using CDR forcing

      logical,parameter,public :: cdr_volume  = .false.  ! Set to .false. if you want a tracer flux but no added water.
                                                         ! If .true., read in volume flux and tracer concentration, and
                                                         ! multiply together to get tracer flux.
                                                         ! Set to false if you want to read in a vertical profile(s).

      character(len=60) :: cdr_file = 'cdr_release.nc'   ! NetCDF forcing file and variable names

      character(len=9)  :: cdr_loc_lon = 'cdr_lon'  !!  longitude at center of CDR release [degrees East]
      character(len=9)  :: cdr_loc_lat = 'cdr_lat'  !!  latitude at center of CDR release  [degrees North]

      ! PARAMETERIZED VERTICAL PROFILES ********************************
      integer,parameter,public :: ncdr_parm=1   !! number of discrete CDR releases

      ! Use either volume flux [m3/s] and tracer concentrations [mmol/m3], or use tracer flux [mmol/s]
      type (ncforce) :: nc_cdrvol = ncforce( vname='cdr_volume', tname='cdr_time')
      type (ncforce) :: nc_cdrtrc = ncforce( vname='cdr_tracer', tname='cdr_time')
      type (ncforce) :: nc_cdrflx = ncforce( vname='cdr_trcflx', tname='cdr_time')

      character(len=9)  :: cdr_loc_dep = 'cdr_dep'  !!  depth of CDR release [m]
      character(len=9)  :: cdr_scl_hor = 'cdr_hsc'  !!  horizontal scale of CDR release [m]
      character(len=9)  :: cdr_scl_vrt = 'cdr_vsc'  !!  vertical scale of CDR release [m]


      ! READ IN VERTICAL PROFILES FROM FILE ****************************
      ! Layer thicknesses for a vertical profile [m]
      type (ncforce)   :: nc_cdrhz  = ncforce( vname='cdr_layer_thickness', tname='cdr_time')
      ! Total mass to be added in each column
      type (ncforce)   :: nc_tot_mass  = ncforce( vname='total_mass', tname='cdr_time')
      ! Layerwise additionality
      type (ncforce3d) :: nc_cdrflx3d = ncforce3d( vname='cdr_trcflx_profile', tname='cdr_time')


      ! SPECIAL FLAG FOR UPSCALING (I.E. ADD ALK AND DIC VIA VERTICAL PROFILES
      logical,parameter,public :: cdr_upscaling  = .true.  ! Should be false if not using CDR forcing


      ! end user inputs
      ! ****************************************************************
